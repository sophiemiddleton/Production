#
#  Mix pileup.  This is a form of OnSpill digitization
#
#include "Production/JobConfig/digitize/prolog.fcl"
#include "Production/JobConfig/mixing/prolog.fcl"
process_name: Mix
source : { module_type : RootInput }
services : @local::Services.SimAndReco # reco is needed for the trigger
physics : { 
  producers : {
    @table::Digitize.producers
    @table::Trigger.producers 
    @table::Mixing.producers
  }
  filters: { 
    @table::Digitize.filters 
    @table::Trigger.filters
    @table::Mixing.filters
  }
  analyzers: { @table::Digitize.analyzers }
  Triggered : [ @sequence::Mixing.MixSequence ]
  Untriggered : [ @sequence::Mixing.MixSequence, Triggerable ]
  EndPath : @local::Digitize.EndPath
}
#
outputs : { 
  TriggeredOutput : @local::Mixing.TriggeredOutput
  UntriggeredOutput : @local::Mixing.UntriggeredOutput
}
#
# Final configuration
#
#include "Production/JobConfig/common/epilog.fcl"
#include "Production/JobConfig/digitize/epilog.fcl"
# add trigger paths
#include "Offline/gen/fcl/Trigger/OnSpillTrigMenu/OnSpillTrigMenu.fcl"
# set the event timing for Onspill
physics.producers.EWMProducer.SpillType : 1
# minimal BField map
services.GeometryService.inputFile      : "Offline/Mu2eG4/geom/geom_common_reco.txt"
# add primary and mixers to the list of step producers.  Note the StrawDigi maker uses a general selector if no module is specified
physics.producers.makeSD.StrawGasStepModule : ""
physics.producers.compressDigiMCs.simParticleTags : [compressDetStepMCs, @sequence::Mixing.StepMixSequence ]
physics.producers.compressDigiMCs.caloShowerStepTags : [compressDetStepMCs, @sequence::Mixing.StepMixSequence ]
physics.producers.CaloShowerROMaker.caloShowerStepCollection : [compressDetStepMCs, @sequence::Mixing.StepMixSequence ]
physics.producers.CrvPhotons.crvStepModuleLabels : [ compressDetStepMCs, @sequence::Mixing.StepMixSequence ]
physics.producers.CrvPhotons.crvStepProcessNames : [ "","","","","" ]
# configure the mixin efficiences
physics.filters.EleBeamFlashMixer.mu2e.simStageEfficiencyTags: ["EleBeamCat", "EleBeamFlashCat" ]
physics.filters.MuBeamFlashMixer.mu2e.simStageEfficiencyTags: ["MuBeamCat", "MuBeamFlashCat" ]
physics.filters.NeutralsFlashMixer.mu2e.simStageEfficiencyTags: ["NeutralsCat", "NeutralsFlashCat" ]
physics.filters.MuStopPileupMixer.mu2e.simStageEfficiencyTags: ["MuBeamCat", "MuminusStopsCat", "MuStopPileupCat"] 
physics.filters.MuStopPileupMixer.mu2e.meanEventsPerPOTFactors : [ 1000 ]  # target stops are presampled by 1000
# define the paths
physics.trigger_paths[0] : Triggered
physics.trigger_paths[1] : Untriggered
physics.end_paths : [ EndPath ]
# generic output: this is overwritten by the gen_Mix.sh script
outputs.TriggeredOutput.fileName: "dig.owner.MixTriggered.version.sequencer.art"
outputs.UntriggeredOutput.fileName: "dig.owner.MixUntriggered.version.sequencer.art"
