[global]
group = mu2e
experiment = mu2e
wrapper = file:///${FIFE_UTILS_DIR}/libexec/fife_wrap
submitter = mu2e
outdir_fcl = /pnfs/mu2e/scratch/datasets/phy-etc/cnf/mu2e/
outdir_sim = /pnfs/mu2e/scratch/datasets/phy-sim/sim/mu2e/
outdir_dts = /pnfs/mu2e/scratch/datasets/phy-sim/dts/mu2e/
outdir_sim_tape = /pnfs/mu2e/tape/phy-sim/sim/mu2e/
outdir_dts_tape = /pnfs/mu2e/tape/phy-sim/dts/mu2e/
logdir_bck = /pnfs/mu2e/scratch/datasets/phy-etc/bck/mu2e/
desc = MDC2020j
run_number = 1201
njobs = 500
release = MDC2020j
stage_name = override_me
artRoot_dataset = override_me
histRoot_dataset = override_me

[env_pass]
IFDH_DEBUG = 1
SAM_EXPERIMENT = %(experiment)s
OUTPUT_DATASET = bck.%(submitter)s.%(stage_name)s.%(desc)s.tbz
ARTROOT_DATASET = %(artRoot_dataset)s
HISTROOT_DATASET = %(histRoot_dataset)s

[submit]
debug = True
G = %(group)s
e = SAM_EXPERIMENT
e_1 = IFDH_DEBUG
e_2 = POMS4_CAMPAIGN_NAME
e_3 = POMS4_CAMPAIGN_STAGE_NAME
resource-provides = usage_model=DEDICATED,OPPORTUNISTIC,OFFSITE
generate-email-summary = True
expected-lifetime = 23h
memory = 2500MB
email-to = srsoleti@fnal.gov
# tar_file_name = dropbox:///mu2e/data/submitters/srsoleti/museTarball/tmp.sFo0Z6v306/Code.tar.bz2
# use-cvmfs-dropbox = True
l = '+SingularityImage=\"/cvmfs/singularity.opensciencegrid.org/fermilab/fnal-wn-sl7:latest\"'
append_condor_requirements='(TARGET.HAS_SINGULARITY=?=true)'

[job_setup]
debug = True
find_setups = False
source_1 = /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh
source_2 = /cvmfs/mu2e.opensciencegrid.org/Musings/SimJob/%(release)s/setup.sh
setup_1 = dhtools
setup_2 = ifdh_art v2_12_02 -q +e20:+prof
setup_3 = ifdhc v2_5_14
setup_4 = mu2etools
setup_5 = mu2efiletools
setup_6 = sqlite v3_34_01_00
setup_7 = gcc v9_3_0
ifdh_art = True
postscript = [ -d 000 ] && sed -i "s/MU2EGRIDDSOWNER/%(submitter)s/g" [0-9]*/cnf.*.fcl
postscript_2 = [ -d 000 ] && sed -i "s/MU2EGRIDDSCONF/%(desc)s/g" [0-9]*/cnf.*.fcl
postscript_3 = [ -d 000 ] && mv [0-9]*/cnf.*.fcl* .
postscript_4 = [ -f template.fcl ] && rm template.fcl

[sam_consumer]
limit = 1
schema = xroot
appvers = %(release)s
appfamily = art
appname = SimJob

[job_output]
addoutput = *.fcl
add_to_dataset = cnf.%(submitter)s.%(stage_name)s.%(desc)s.fcl
declare_metadata = True
metadata_extractor = json
add_location = True
add_metadata = file_format=fcl
hash = 2
parallel = 5
hash_alg = sha256

[job_output_1]
addoutput = *.tbz
declare_metadata = False
metadata_extractor = printJsonSave.sh
add_location = True
add_metadata = file_format=tbz
add_to_dataset = bck.%(submitter)s.%(stage_name)s.%(desc)s.tbz
hash = 2
hash_alg = sha256

[job_output_2]
addoutput = *.Beam.*.art
declare_metadata = True
metadata_extractor = printJsonSave.sh
add_location = True
add_metadata = file_format=art
add_to_dataset = sim.%(submitter)s.Beam.%(desc)s.art
hash = 2
hash_alg = sha256

[job_output_3]
addoutput = *.Neutrals.*.art
declare_metadata = True
metadata_extractor = printJsonSave.sh
add_location = True
add_metadata = file_format=art
add_to_dataset = sim.%(submitter)s.Neutrals.%(desc)s.art
hash = 2
hash_alg = sha256

[job_output_4]
addoutput = *.TargetStops.*.art
declare_metadata = True
metadata_extractor = printJsonSave.sh
add_location = True
add_metadata = file_format=art
add_to_dataset = sim.%(submitter)s.TargetStops.%(desc)s.art
hash = 2
hash_alg = sha256

[job_output_5]
addoutput = *.IPAStops.*.art
declare_metadata = True
metadata_extractor = printJsonSave.sh
add_location = True
add_metadata = file_format=art
add_to_dataset = sim.%(submitter)s.IPAStops.%(desc)s.art
hash = 2
hash_alg = sha256

[job_output_6]
addoutput = *.*BeamFlash.*.art
declare_metadata = True
metadata_extractor = printJsonSave.sh
add_location = True
add_metadata = file_format=art
hash = 2
hash_alg = sha256

[job_output_7]
addoutput = *.Early*BeamFlash.*.art
declare_metadata = True
metadata_extractor = printJsonSave.sh
add_location = True
add_metadata = file_format=art
hash = 2
hash_alg = sha256

[job_output_8]
addoutput = *.NeutralsFlash.*.art
declare_metadata = True
metadata_extractor = printJsonSave.sh
add_location = True
add_metadata = file_format=art
add_to_dataset = dts.%(submitter)s.NeutralsFlash.%(desc)s.art
hash = 2
hash_alg = sha256

[job_output_9]
addoutput = *.EarlyNeutralsFlash.*.art
declare_metadata = True
metadata_extractor = printJsonSave.sh
add_location = True
add_metadata = file_format=art
add_to_dataset = dts.%(submitter)s.EarlyNeutralsFlash.%(desc)s.art
hash = 2
hash_alg = sha256

[job_output_10]
addoutput = *.*Cat.*.art
declare_metadata = True
metadata_extractor = printJsonSave.sh
add_location = True
add_metadata = file_format=art
hash = 2
hash_alg = sha256

[stage_pot_fcl]
global.stage_name = POT
job_output.dest = %(outdir_fcl)s/%(stage_name)s/%(desc)s/fcl/

executable.name = true
executable_2.name = generate_fcl
executable_2.arg_4 = --run-number=%(run_number)s
executable_2.arg_5 = --events-per-job=4000
executable_2.arg_6 = --njobs=%(njobs)s
executable_2.arg_7 = --embed
executable_2.arg_8 = Production/JobConfig/beam/POT.fcl

job_setup.ifdh_art = False

[stage_pot]
global.stage_name = POT
global.artRoot_dataset = sim.%(submitter)s.Beam.%(desc)s.art,sim.%(submitter)s.Neutrals.%(desc)s.art

submit.cpu = 2
submit.dataset = cnf.%(submitter)s.POT.%(desc)s.fcl
submit.n_files_per_job = 1
sam_consumer.limit = 1

job_output_1.dest = %(logdir_bck)s/%(stage_name)s/%(desc)s/tbz/
job_output_2.dest = %(outdir_sim)s/Beam/%(desc)s/art
job_output_3.dest = %(outdir_sim)s/Neutrals/%(desc)s/art

job_setup.postscript = samweb file-lineage parents `basename ${fname}` > parents.txt

job_setup.getconfig = True
job_setup.multifile = False
job_setup.setup_local = True

[stage_beam_splitter_fcl]
global.stage_name = BeamSplitter
job_output.dest = %(outdir_fcl)s/%(stage_name)s/%(desc)s/fcl/

job_setup.prescript = samweb list-file-locations --defname=sim.%(submitter)s.Beam.%(desc)s.art --schema=root | cut -f1 > inputs.txt

executable.name = true
executable_2.name = generate_fcl
executable_2.arg_4 = --merge=500
executable_2.arg_5 = --inputs=inputs.txt
executable_2.arg_6 = --embed
executable_2.arg_7 = Production/JobConfig/beam/BeamSplitter.fcl

job_setup.ifdh_art = False

[stage_beam_splitter]
global.stage_name = BeamSplitter

job_output_1.dest = %(logdir_bck)s/%(stage_name)s/%(desc)s/tbz/
job_output_2.addoutput = *.EleBeamCat.*.art
job_output_2.add_to_dataset = sim.%(submitter)s.EleBeamCat.%(desc)s.art
job_output_2.dest = %(outdir_sim)s/EleBeamCat/%(desc)s/art

job_output_3.addoutput = *.MuBeamCat.*.art
job_output_3.add_to_dataset = sim.%(submitter)s.MuBeamCat.%(desc)s.art
job_output_3.dest = %(outdir_sim)s/MuBeamCat/%(desc)s/art

global.artRoot_dataset = sim.%(submitter)s.MuBeamCat.%(desc)s.art,sim.%(submitter)s.EleBeamCat.%(desc)s.art

submit.dataset = cnf.%(submitter)s.BeamSplitter.%(desc)s.fcl
submit.n_files_per_job = 1
sam_consumer.limit = 1

job_setup.postscript = samweb file-lineage parents `basename ${fname}` > parents.txt

job_setup.getconfig = True
job_setup.multifile = False
job_setup.setup_local = True

[stage_elebeam_resampler_fcl]
global.stage_name = EleBeamResampler
job_output.dest = %(outdir_fcl)s/%(stage_name)s/%(desc)s/fcl/

job_setup.prescript = samweb list-file-locations --defname=sim.%(submitter)s.EleBeamCat.%(desc)s.art --schema=root | cut -f1 > inputs.txt
job_setup.prescript_2 = dataset=sim.%(submitter)s.EleBeamCat.%(desc)s.art
job_setup.prescript_3 = nfiles=`samCountFiles.sh $dataset`
job_setup.prescript_4 = nevts=`samCountEvents.sh $dataset`
job_setup.prescript_5 = let nskip=nevts/nfiles
job_setup.prescript_6 = echo '#include "Production/JobConfig/beam/EleBeamResampler.fcl"' >> template.fcl
job_setup.prescript_7 = echo 'physics.filters.beamResampler.mu2e.MaxEventsToSkip: '${nskip} >> template.fcl

executable.name = true
executable_2.name = generate_fcl
executable_2.arg_4 = --aux=1:physics.filters.beamResampler.fileNames:inputs.txt
executable_2.arg_5 = --events-per-job=400000
executable_2.arg_6 = --run-number=%(run_number)s
executable_2.arg_7 = --njobs=%(njobs)s
executable_2.arg_8 = --embed
executable_2.arg_9 = template.fcl

job_setup.ifdh_art = False

[stage_elebeam_resampler]
global.stage_name = EleBeamResampler

job_output_1.dest = %(logdir_bck)s/%(stage_name)s/%(desc)s/tbz/
job_output_6.addoutput = *.EleBeamFlash.*.art
job_output_6.add_to_dataset = dts.%(submitter)s.EleBeamFlash.%(desc)s.art
job_output_6.dest = %(outdir_dts)s/EleBeamFlash/%(desc)s/art
job_output_7.add_to_dataset = dts.%(submitter)s.EarlyEleBeamFlash.%(desc)s.art
job_output_7.dest = %(outdir_dts)s/EarlyEleBeamFlash/%(desc)s/art

global.artRoot_dataset = dts.%(submitter)s.EleBeamFlash.%(desc)s.art,dts.%(submitter)s.EarlyEleBeamFlash.%(desc)s.art

submit.dataset = cnf.%(submitter)s.EleBeamResampler.%(desc)s.fcl
submit.n_files_per_job = 1
submit.cpu = 2
sam_consumer.limit = 1
job_setup.postscript = samweb file-lineage parents `basename ${fname}` > parents.txt

job_setup.getconfig = True
job_setup.multifile = False
job_setup.setup_local = True

[stage_mubeam_resampler_fcl]
global.stage_name = MuBeamResampler
job_output.dest = %(outdir_fcl)s/%(stage_name)s/%(desc)s/fcl/

job_setup.prescript = samweb list-file-locations --defname=sim.%(submitter)s.MuBeamCat.%(desc)s.art --schema=root | cut -f1 > inputs.txt
job_setup.prescript_2 = dataset=sim.%(submitter)s.MuBeamCat.%(desc)s.art
job_setup.prescript_3 = nfiles=`samCountFiles.sh $dataset`
job_setup.prescript_4 = nevts=`samCountEvents.sh $dataset`
job_setup.prescript_5 = let nskip=nevts/nfiles
job_setup.prescript_6 = echo '#include "Production/JobConfig/beam/MuBeamResampler.fcl"' >> template.fcl
job_setup.prescript_7 = echo 'physics.filters.beamResampler.mu2e.MaxEventsToSkip: '${nskip} >> template.fcl

executable.name = true
executable_2.name = generate_fcl
executable_2.arg_4 = --aux=1:physics.filters.beamResampler.fileNames:inputs.txt
executable_2.arg_5 = --events-per-job=400000
executable_2.arg_6 = --run-number=%(run_number)s
executable_2.arg_7 = --njobs=%(njobs)s
executable_2.arg_8 = --embed
executable_2.arg_9 = template.fcl

job_setup.ifdh_art = False

[stage_mubeam_resampler]
global.stage_name = MuBeamResampler
global.artRoot_dataset = sim.%(submitter)s.TargetStops.%(desc)s.art,sim.%(submitter)s.IPAStops.%(desc)s.art,dts.%(submitter)s.MuBeamFlash.%(desc)s.art,dts.%(submitter)s.EarlyMuBeamFlash.%(desc)s.art

job_output_1.dest = %(logdir_bck)s/%(stage_name)s/%(desc)s/tbz/
job_output_6.addoutput = *.MuBeamFlash.*.art
job_output_6.add_to_dataset = dts.%(submitter)s.MuBeamFlash.%(desc)s.art
job_output_6.dest = %(outdir_dts)s/MuBeamFlash/%(desc)s/art

job_output_7.add_to_dataset = dts.%(submitter)s.EarlyMuBeamFlash.%(desc)s.art
job_output_7.dest = %(outdir_dts)s/EarlyMuBeamFlash/%(desc)s/art

job_output_4.dest = %(outdir_sim)s/TargetStops/%(desc)s/art
job_output_5.dest = %(outdir_sim)s/IPAStops/%(desc)s/art

submit.dataset = cnf.%(submitter)s.MuBeamResampler.%(desc)s.fcl
submit.n_files_per_job = 1
submit.cpu = 2
sam_consumer.limit = 1
job_setup.postscript = samweb file-lineage parents `basename ${fname}` > parents.txt

job_setup.getconfig = True
job_setup.multifile = False
job_setup.setup_local = True

[stage_neutrals_cat_fcl]
global.stage_name = NeutralsCat
job_output.dest = %(outdir_fcl)s/%(stage_name)s/%(desc)s/fcl/

job_setup.prescript = samweb list-file-locations --defname=sim.%(submitter)s.Neutrals.%(desc)s.art --schema=root | cut -f1 > inputs.txt
job_setup.prescript_2 = echo '#include "Production/JobConfig/common/artcat.fcl"' >> template.fcl
job_setup.prescript_3 = echo 'outputs.out.fileName: "sim.DSOWNER.NeutralsCat.DSCONF.SEQ.art"' >> template.fcl

executable.name = true
executable_2.name = generate_fcl
executable_2.arg_4 = --merge=500
executable_2.arg_5 = --inputs=inputs.txt
executable_2.arg_6 = --embed
executable_2.arg_7 = template.fcl

job_setup.ifdh_art = False

[stage_neutrals_cat]
global.stage_name = NeutralsCat

job_output_1.dest = %(logdir_bck)s/%(stage_name)s/%(desc)s/tbz/
job_output_10.add_to_dataset = sim.%(submitter)s.NeutralsCat.%(desc)s.art
job_output_10.dest = %(outdir_sim_tape)s/NeutralsCat/%(desc)s/art

global.artRoot_dataset = sim.%(submitter)s.NeutralsCat.%(desc)s.art

submit.dataset = cnf.%(submitter)s.NeutralsCat.%(desc)s.fcl
submit.n_files_per_job = 1
sam_consumer.limit = 1
job_setup.postscript = samweb file-lineage parents `basename ${fname}` > parents.txt

job_setup.getconfig = True
job_setup.multifile = False
job_setup.setup_local = True

[stage_neutrals_resampler_fcl]
global.stage_name = NeutralsResampler
job_output.dest = %(outdir_fcl)s/%(stage_name)s/%(desc)s/fcl/

job_setup.prescript = samweb list-file-locations --defname=sim.%(submitter)s.NeutralsCat.%(desc)s.art --schema=root | cut -f1 > inputs.txt
job_setup.prescript_2 = dataset=sim.%(submitter)s.NeutralsCat.%(desc)s.art
job_setup.prescript_3 = nfiles=`samCountFiles.sh $dataset`
job_setup.prescript_4 = nevts=`samCountEvents.sh $dataset`
job_setup.prescript_5 = let nskip=nevts/nfiles
job_setup.prescript_6 = echo '#include "Production/JobConfig/beam/NeutralsResampler.fcl"' >> template.fcl
job_setup.prescript_7 = echo 'physics.filters.neutralsResampler.mu2e.MaxEventsToSkip: '${nskip} >> template.fcl

executable.name = true
executable_2.name = generate_fcl
executable_2.arg_4 = --aux=1:physics.filters.neutralsResampler.fileNames:inputs.txt
executable_2.arg_5 = --events-per-job=400000
executable_2.arg_6 = --run-number=%(run_number)s
executable_2.arg_7 = --njobs=%(njobs)s
executable_2.arg_8 = --include
executable_2.arg_9 = Production/JobConfig/beam/NeutralsResampler.fcl

job_setup.ifdh_art = False

[stage_neutrals_resampler]
global.stage_name = NeutralsResampler

job_output_1.dest = %(logdir_bck)s/%(stage_name)s/%(desc)s/tbz/

global.artRoot_dataset = dts.%(submitter)s.NeutralsFlash.%(desc)s.art,dts.%(submitter)s.EarlyNeutralsFlash.%(desc)s.art
job_output_8.dest = %(outdir_dts)s/NeutralsFlash/%(desc)s/art
job_output_9.dest = %(outdir_dts)s/EarlyNeutralsFlash/%(desc)s/art

submit.dataset = cnf.%(submitter)s.NeutralsResampler.%(desc)s.fcl
submit.cpu = 2
submit.n_files_per_job = 1
sam_consumer.limit = 1
job_setup.postscript = samweb file-lineage parents `basename ${fname}` > parents.txt

job_setup.getconfig = True
job_setup.multifile = False
job_setup.setup_local = True

[stage_elebeamflash_cat_fcl]
global.stage_name = EleBeamFlashCat
job_output.dest = %(outdir_fcl)s/%(stage_name)s/%(desc)s/fcl/

job_setup.prescript = samweb list-file-locations --defname=dts.%(submitter)s.EleBeamFlash.%(desc)s.art --schema=root | cut -f1 > inputs.txt
job_setup.prescript_2 = echo '#include "Production/JobConfig/common/artcat.fcl"' >> template.fcl
job_setup.prescript_3 = echo 'outputs.out.fileName: "dts.DSOWNER.EleBeamFlashCat.DSCONF.SEQ.art"' >> template.fcl
job_setup.prescript_4 = catAndShuf.sh inputs.txt 10

executable.name = true
executable_2.name = generate_fcl
executable_2.arg_4 = --merge=5000
executable_2.arg_5 = --inputs=inputs_cat.txt
executable_2.arg_6 = --embed
executable_2.arg_7 = template.fcl

job_setup.ifdh_art = False

[stage_elebeamflash_cat]
global.stage_name = EleBeamFlashCat

job_output_10.add_to_dataset = dts.%(submitter)s.EleBeamFlashCat.%(desc)s.art
job_output_10.dest = %(outdir_dts_tape)s/EleBeamFlashCat/%(desc)s/art
job_output_1.dest = %(logdir_bck)s/%(stage_name)s/%(desc)s/tbz/

global.artRoot_dataset = dts.%(submitter)s.EleBeamFlashCat.%(desc)s.art

submit.dataset = cnf.%(submitter)s.EleBeamFlashCat.%(desc)s.fcl
submit.n_files_per_job = 1
sam_consumer.limit = 1
job_setup.postscript = samweb file-lineage parents `basename ${fname}` > parents.txt

job_setup.getconfig = True
job_setup.multifile = False
job_setup.setup_local = True

[stage_earlyelebeamflash_cat_fcl]
global.stage_name = EarlyEleBeamFlashCat
job_output.dest = %(outdir_fcl)s/%(stage_name)s/%(desc)s/fcl/

job_setup.prescript = samweb list-file-locations --defname=dts.%(submitter)s.EarlyEleBeamFlash.%(desc)s.art --schema=root | cut -f1 > inputs.txt
job_setup.prescript_2 = echo '#include "Production/JobConfig/common/artcat.fcl"' >> template.fcl
job_setup.prescript_3 = echo 'outputs.out.fileName: "dts.DSOWNER.EarlyEleBeamFlashCat.DSCONF.SEQ.art"' >> template.fcl

executable.name = true
executable_2.name = generate_fcl
executable_2.arg_4 = --merge=500
executable_2.arg_5 = --inputs=inputs.txt
executable_2.arg_6 = --embed
executable_2.arg_7 = template.fcl

job_setup.ifdh_art = False

[stage_earlyelebeamflash_cat]
global.stage_name = EarlyEleBeamFlashCat

job_output_10.add_to_dataset = dts.%(submitter)s.EarlyEleBeamFlashCat.%(desc)s.art
job_output_10.dest = %(outdir_dts_tape)s/EarlyEleBeamFlashCat/%(desc)s/art

global.artRoot_dataset = dts.%(submitter)s.EarlyEleBeamFlashCat.%(desc)s.art
job_output_1.dest = %(logdir_bck)s/%(stage_name)s/%(desc)s/tbz/

submit.dataset = cnf.%(submitter)s.EarlyEleBeamFlashCat.%(desc)s.fcl
submit.n_files_per_job = 1
sam_consumer.limit = 1
job_setup.postscript = samweb file-lineage parents `basename ${fname}` > parents.txt

job_setup.getconfig = True
job_setup.multifile = False
job_setup.setup_local = True

[stage_mubeamflash_cat_fcl]
global.stage_name = MuBeamFlashCat
job_output.dest = %(outdir_fcl)s/%(stage_name)s/%(desc)s/fcl/

job_setup.prescript = samweb list-file-locations --defname=dts.%(submitter)s.MuBeamFlash.%(desc)s.art --schema=root | cut -f1 > inputs.txt
job_setup.prescript_2 = echo '#include "Production/JobConfig/common/artcat.fcl"' >> template.fcl
job_setup.prescript_3 = echo 'outputs.out.fileName: "dts.DSOWNER.MuBeamFlashCat.DSCONF.SEQ.art"' >> template.fcl

executable.name = true
executable_2.name = generate_fcl
executable_2.arg_4 = --merge=500
executable_2.arg_5 = --inputs=inputs.txt
executable_2.arg_6 = --embed
executable_2.arg_7 = template.fcl

job_setup.ifdh_art = False

[stage_mubeamflash_cat]
global.stage_name = MuBeamFlashCat

job_output_10.add_to_dataset = dts.%(submitter)s.MuBeamFlashCat.%(desc)s.art
job_output_10.dest = %(outdir_dts_tape)s/MuBeamFlashCat/%(desc)s/art
job_output_1.dest = %(logdir_bck)s/%(stage_name)s/%(desc)s/tbz/

global.artRoot_dataset = dts.%(submitter)s.MuBeamFlashCat.%(desc)s.art

submit.dataset = cnf.%(submitter)s.MuBeamFlashCat.%(desc)s.fcl
submit.n_files_per_job = 1
sam_consumer.limit = 1
job_setup.postscript = samweb file-lineage parents `basename ${fname}` > parents.txt

job_setup.getconfig = True
job_setup.multifile = False
job_setup.setup_local = True

[stage_earlymubeamflash_cat_fcl]
global.stage_name = EarlyMuBeamFlashCat
job_output.dest = %(outdir_fcl)s/%(stage_name)s/%(desc)s/fcl/

job_setup.prescript = samweb list-file-locations --defname=dts.%(submitter)s.EarlyMuBeamFlash.%(desc)s.art --schema=root | cut -f1 > inputs.txt
job_setup.prescript_2 = echo '#include "Production/JobConfig/common/artcat.fcl"' >> template.fcl
job_setup.prescript_3 = echo 'outputs.out.fileName: "dts.DSOWNER.EarlyMuBeamFlashCat.DSCONF.SEQ.art"' >> template.fcl

executable.name = true
executable_2.name = generate_fcl
executable_2.arg_4 = --merge=500
executable_2.arg_5 = --inputs=inputs.txt
executable_2.arg_6 = --embed
executable_2.arg_7 = template.fcl

job_setup.ifdh_art = False

[stage_earlymubeamflash_cat]
global.stage_name = EarlyMuBeamFlashCat
job_output_1.dest = %(logdir_bck)s/%(stage_name)s/%(desc)s/tbz/

job_output_10.add_to_dataset = dts.%(submitter)s.EarlyMuBeamFlashCat.%(desc)s.art
job_output_10.dest = %(outdir_dts_tape)s/EarlyMuBeamFlashCat/%(desc)s/art

global.artRoot_dataset = dts.%(submitter)s.EarlyMuBeamFlashCat.%(desc)s.art

submit.dataset = cnf.%(submitter)s.EarlyMuBeamFlashCat.%(desc)s.fcl
submit.n_files_per_job = 1
sam_consumer.limit = 1
job_setup.postscript = samweb file-lineage parents `basename ${fname}` > parents.txt

job_setup.getconfig = True
job_setup.multifile = False
job_setup.setup_local = True

[stage_ipastops_cat_fcl]
global.stage_name = IPAStopsCat
job_output.dest = %(outdir_fcl)s/%(stage_name)s/%(desc)s/fcl/

job_setup.prescript = samweb list-file-locations --defname=sim.%(submitter)s.IPAStops.%(desc)s.art --schema=root | cut -f1 > inputs.txt
job_setup.prescript_2 = echo '#include "Production/JobConfig/common/artcat.fcl"' >> template.fcl
job_setup.prescript_3 = echo 'outputs.out.fileName: "sim.DSOWNER.IPAStopsCat.DSCONF.SEQ.art"' >> template.fcl

executable.name = true
executable_2.name = generate_fcl
executable_2.arg_4 = --merge=500
executable_2.arg_5 = --inputs=inputs.txt
executable_2.arg_6 = --embed
executable_2.arg_7 = template.fcl

job_setup.ifdh_art = False

[stage_ipastops_cat]
global.stage_name = IPAStopsCat
job_output_1.dest = %(logdir_bck)s/%(stage_name)s/%(desc)s/tbz/

job_output_10.add_to_dataset = sim.%(submitter)s.IPAStopsCat.%(desc)s.art
job_output_10.dest = %(outdir_sim_tape)s/IPAStopsCat/%(desc)s/art

global.artRoot_dataset = sim.%(submitter)s.IPAStopsCat.%(desc)s.art

submit.dataset = cnf.%(submitter)s.IPAStopsCat.%(desc)s.fcl
submit.n_files_per_job = 1
sam_consumer.limit = 1
job_setup.postscript = samweb file-lineage parents `basename ${fname}` > parents.txt

job_setup.getconfig = True
job_setup.multifile = False
job_setup.setup_local = True

[stage_targetstops_cat_fcl]
global.stage_name = TargetStopsCat
job_output.dest = %(outdir_fcl)s/%(stage_name)s/%(desc)s/fcl/

job_setup.prescript = samweb list-file-locations --defname=sim.%(submitter)s.TargetStops.%(desc)s.art --schema=root | cut -f1 > inputs.txt
job_setup.prescript_2 = echo '#include "Production/JobConfig/common/artcat.fcl"' >> template.fcl
job_setup.prescript_3 = echo 'outputs.out.fileName: "sim.DSOWNER.TargetStopsCat.DSCONF.SEQ.art"' >> template.fcl

executable.name = true
executable_2.name = generate_fcl
executable_2.arg_4 = --merge=500
executable_2.arg_5 = --inputs=inputs.txt
executable_2.arg_6 = --embed
executable_2.arg_7 = template.fcl

job_setup.ifdh_art = False

[stage_targetstops_cat]
global.stage_name = TargetStopsCat
job_output_1.dest = %(logdir_bck)s/%(stage_name)s/%(desc)s/tbz/

job_output_10.add_to_dataset = sim.%(submitter)s.TargetStopsCat.%(desc)s.art
job_output_10.dest = %(outdir_sim_tape)s/TargetStopsCat/%(desc)s/art

global.artRoot_dataset = sim.%(submitter)s.TargetStopsCat.%(desc)s.art

submit.dataset = cnf.%(submitter)s.TargetStopsCat.%(desc)s.fcl
submit.n_files_per_job = 1
sam_consumer.limit = 1
job_setup.postscript = samweb file-lineage parents `basename ${fname}` > parents.txt

job_setup.getconfig = True
job_setup.multifile = False
job_setup.setup_local = True

[stage_neutralsflash_cat_fcl]
global.stage_name = NeutralsFlashCat
job_output.dest = %(outdir_fcl)s/%(stage_name)s/%(desc)s/fcl/

job_setup.prescript = samweb list-file-locations --defname=dts.%(submitter)s.NeutralsFlash.%(desc)s.art --schema=root | cut -f1 > inputs.txt
job_setup.prescript_2 = echo '#include "Production/JobConfig/common/artcat.fcl"' >> template.fcl
job_setup.prescript_3 = echo 'outputs.out.fileName: "dts.DSOWNER.NeutralsFlashCat.DSCONF.SEQ.art"' >> template.fcl
job_setup.prescript_4 = catAndShuf.sh inputs.txt 10

executable.name = true
executable_2.name = generate_fcl
executable_2.arg_4 = --merge=10000
executable_2.arg_5 = --inputs=inputs_cat.txt
executable_2.arg_6 = --embed
executable_2.arg_7 = template.fcl

job_setup.ifdh_art = False

[stage_neutralsflash_cat]
global.stage_name = NeutralsFlashCat
job_output_1.dest = %(logdir_bck)s/%(stage_name)s/%(desc)s/tbz/

job_output_10.add_to_dataset = dts.%(submitter)s.NeutralsFlashCat.%(desc)s.art
job_output_10.dest = %(outdir_dts_tape)s/NeutralsFlashCat/%(desc)s/art

global.artRoot_dataset = dts.%(submitter)s.NeutralsFlashCat.%(desc)s.art

submit.dataset = cnf.%(submitter)s.NeutralsFlashCat.%(desc)s.fcl
submit.n_files_per_job = 1
sam_consumer.limit = 1
job_setup.postscript = samweb file-lineage parents `basename ${fname}` > parents.txt

job_setup.getconfig = True
job_setup.multifile = False
job_setup.setup_local = True

[stage_earlyneutralsflash_cat_fcl]
global.stage_name = EarlyNeutralsFlashCat
job_output.dest = %(outdir_fcl)s/%(stage_name)s/%(desc)s/fcl/

job_setup.prescript = samweb list-file-locations --defname=dts.%(submitter)s.EarlyNeutralsFlash.%(desc)s.art --schema=root | cut -f1 > inputs.txt
job_setup.prescript_2 = echo '#include "Production/JobConfig/common/artcat.fcl"' >> template.fcl
job_setup.prescript_3 = echo 'outputs.out.fileName: "dts.DSOWNER.EarlyNeutralsFlashCat.DSCONF.SEQ.art"' >> template.fcl

executable.name = true
executable_2.name = generate_fcl
executable_2.arg_4 = --merge=500
executable_2.arg_5 = --inputs=inputs.txt
executable_2.arg_6 = --embed
executable_2.arg_7 = template.fcl

job_setup.ifdh_art = False

[stage_earlyneutralsflash_cat]
global.stage_name = EarlyNeutralsFlashCat
job_output_1.dest = %(logdir_bck)s/%(stage_name)s/%(desc)s/tbz/

job_output_10.add_to_dataset = dts.%(submitter)s.EarlyNeutralsFlashCat.%(desc)s.art
job_output_10.dest = %(outdir_dts_tape)s/EarlyNeutralsFlashCat/%(desc)s/art

global.artRoot_dataset = dts.%(submitter)s.EarlyNeutralsFlashCat.%(desc)s.art

submit.dataset = cnf.%(submitter)s.EarlyNeutralsFlashCat.%(desc)s.fcl
submit.n_files_per_job = 1
sam_consumer.limit = 1
job_setup.postscript = samweb file-lineage parents `basename ${fname}` > parents.txt

job_setup.getconfig = True
job_setup.multifile = False
job_setup.setup_local = True

[stage_muonstops_fcl]
global.stage_name = MuonStopSelector
job_output.dest = %(outdir_fcl)s/%(stage_name)s/%(desc)s/fcl/

job_setup.prescript = samweb list-file-locations --defname=sim.%(submitter)s.TargetStopsCat.%(desc)s.art --schema=root | cut -f1 > inputs.txt

executable.name = true
executable_2.name = generate_fcl
executable_2.arg_4 = --inputs=inputs.txt
executable_2.arg_5 = --merge=500
executable_2.arg_6 = --include
executable_2.arg_7 = Production/JobConfig/beam/MuonStopSelector.fcl

job_setup.ifdh_art = False

[stage_muonstops]
global.stage_name = MuonStopSelector
job_output_1.dest = %(logdir_bck)s/%(stage_name)s/%(desc)s/tbz/

job_output_2.add_to_dataset = sim.%(submitter)s.MuminusStopsCat.%(desc)s.art
job_output_2.addoutput = *.MuminusStopsCat.*.art
job_output_2.dest = %(outdir_sim_tape)s/MuminusStopsCat/%(desc)s/art

job_output_3.add_to_dataset = sim.%(submitter)s.MuplusStopsCat.%(desc)s.art
job_output_3.addoutput = *.MuplusStopsCat.*.art
job_output_3.dest = %(outdir_sim_tape)s/MuplusStopsCat/%(desc)s/art

global.artRoot_dataset = sim.%(submitter)s.MuminusStopsCat.%(desc)s.art,sim.%(submitter)s.MuplusStopsCat.%(desc)s.art

submit.dataset = cnf.%(submitter)s.MuonStopSelector.%(desc)s.fcl
submit.n_files_per_job = 1
sam_consumer.limit = 1
job_setup.postscript = samweb file-lineage parents `basename ${fname}` > parents.txt

job_setup.getconfig = True
job_setup.multifile = False
job_setup.setup_local = True

[stage_mustoppileup_fcl]
global.stage_name = MuStopPileup
job_output.dest = %(outdir_fcl)s/%(stage_name)s/%(desc)s/fcl/

job_setup.prescript = samweb list-file-locations --defname=sim.%(submitter)s.MuminusStopsCat.%(desc)s.art --schema=root | cut -f1 > inputs.txt
job_setup.prescript_2 = dataset=sim.%(submitter)s.MuminusStopsCat.%(desc)s.art
job_setup.prescript_3 = nfiles=`samCountFiles.sh $dataset`
job_setup.prescript_4 = nevts=`samCountEvents.sh $dataset`
job_setup.prescript_5 = let nskip=nevts/nfiles
job_setup.prescript_6 = echo '#include "Production/JobConfig/pileup/MuStopPileup.fcl"' >> template.fcl
job_setup.prescript_7 = echo 'physics.filters.TargetStopResampler.mu2e.MaxEventsToSkip: '${nskip} >> template.fcl
job_setup.prescript_8 = let njobs=%(njobs)s/10

executable.name = true
executable_2.name = generate_fcl
executable_2.arg_4 = --events-per-job=400000
executable_2.arg_5 = --njobs=$njobs
executable_2.arg_6 = --run-number=%(run_number)s
executable_2.arg_7 = --auxinput=1:physics.filters.TargetStopResampler.fileNames:inputs.txt
executable_2.arg_8 = --embed
executable_2.arg_9 = template.fcl

job_setup.ifdh_art = False

[stage_mustoppileup]
global.stage_name = MuStopPileup
job_output_1.dest = %(logdir_bck)s/%(stage_name)s/%(desc)s/tbz/

job_output_2.add_to_dataset = dts.%(submitter)s.MuStopPileup.%(desc)s.art
job_output_2.addoutput = *.MuStopPileup.*.art
job_output_2.dest = %(outdir_dts)s/MuStopPileup/%(desc)s/art

global.artRoot_dataset = dts.%(submitter)s.MuStopPileup.%(desc)s.art

submit.dataset = cnf.%(submitter)s.MuStopPileup.%(desc)s.fcl
submit.n_files_per_job = 1
sam_consumer.limit = 1
job_setup.postscript = samweb file-lineage parents `basename ${fname}` > parents.txt

job_setup.getconfig = True
job_setup.multifile = False
job_setup.setup_local = True

[stage_mustoppileup_cat_fcl]
global.stage_name = MuStopPileupCat
job_output.dest = %(outdir_fcl)s/%(stage_name)s/%(desc)s/fcl/

job_setup.prescript = samweb list-file-locations --defname=dts.%(submitter)s.MuStopPileup.%(desc)s.art --schema=root | cut -f1 > inputs.txt
job_setup.prescript_2 = echo '#include "Production/JobConfig/common/artcat.fcl"' >> template.fcl
job_setup.prescript_3 = echo 'outputs.out.fileName: "dts.DSOWNER.MuStopPileupCat.DSCONF.SEQ.art"' >> template.fcl

executable.name = true
executable_2.name = generate_fcl
executable_2.arg_4 = --merge=100
executable_2.arg_5 = --inputs=inputs.txt
executable_2.arg_6 = --embed
executable_2.arg_7 = template.fcl

job_setup.ifdh_art = False

[stage_mustoppileup_cat]
global.stage_name = MuStopPileupCat
job_output_1.dest = %(logdir_bck)s/%(stage_name)s/%(desc)s/tbz/

job_output_10.add_to_dataset = dts.%(submitter)s.MuStopPileupCat.%(desc)s.art
job_output_10.dest = %(outdir_dts_tape)s/MuStopPileupCat/%(desc)s/art

global.artRoot_dataset = dts.%(submitter)s.MuStopPileupCat.%(desc)s.art

submit.dataset = cnf.%(submitter)s.MuStopPileupCat.%(desc)s.fcl
submit.n_files_per_job = 1
sam_consumer.limit = 1
job_setup.postscript = samweb file-lineage parents `basename ${fname}` > parents.txt

job_setup.getconfig = True
job_setup.multifile = False
job_setup.setup_local = True

[executable]
name = loggedMu2e.sh

[executable_2]
name = true
arg_1 = --description=%(stage_name)s
arg_2 = --dsconf=%(desc)s
arg_3 = --dsowner=%(submitter)s
