[global]
group = mu2e
experiment = mu2e
wrapper = file:///${FIFE_UTILS_DIR}/libexec/fife_wrap
submitter = mu2e
outdir_fcl = /pnfs/mu2e/scratch/datasets/phy-etc/cnf/mu2e/
outdir_sim = /pnfs/mu2e/scratch/datasets/phy-sim/sim/mu2e/
outdir_dts = /pnfs/mu2e/scratch/datasets/phy-sim/dts/mu2e/
logdir_bck = /pnfs/mu2e/scratch/datasets/phy-etc/bck/mu2e/
desc = MDC2020j
release = MDC2020j
output_dataset = override_me
artRoot_dataset = override_me
histRoot_dataset = override_me
stage_name = override_me

[env_pass]
IFDH_DEBUG = 1
SAM_EXPERIMENT = %(experiment)s
OUTPUT_DATASET = bck.%(submitter)s.%(stage_name)s.%(desc)s.tbz
ARTROOT_DATASET = %(artRoot_dataset)s
HISTROOT_DATASET = %(histRoot_dataset)s

[submit]
debug = True
G = %(group)s
e = SAM_EXPERIMENT
e_1 = IFDH_DEBUG
e_2 = POMS4_CAMPAIGN_NAME
e_3 = POMS4_CAMPAIGN_STAGE_NAME
resource-provides = usage_model=DEDICATED,OPPORTUNISTIC,OFFSITE
generate-email-summary = True
expected-lifetime = 23h
memory = 2000MB
email-to = srsoleti@fnal.gov
# tar_file_name = dropbox:///mu2e/data/users/srsoleti/museTarball/tmp.KFwEl9QbTg/Code.tar.bz2
# use-cvmfs-dropbox = True
l = '+SingularityImage=\"/cvmfs/singularity.opensciencegrid.org/fermilab/fnal-wn-sl7:latest\"'
append_condor_requirements='(TARGET.HAS_SINGULARITY=?=true)'

[job_setup]
debug = True
find_setups = False
source_1 = /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh
source_2 = /cvmfs/mu2e.opensciencegrid.org/Musings/SimJob/current/setup.sh
setup_1 = dhtools
setup_2 = ifdh_art v2_12_02 -q +e20:+prof
setup_3 = ifdhc v2_5_14
setup_4 = mu2etools
setup_5 = mu2efiletools
setup_6 = sqlite v3_34_01_00
setup_7 = gcc v9_3_0
ifdh_art = True
postscript = [ -d 000 ] && sed -i "s/MU2EGRIDDSOWNER/%(submitter)s/g" [0-9]*/cnf.*.fcl
postscript_2 = [ -d 000 ] && sed -i "s/MU2EGRIDDSCONF/%(desc)s/g" [0-9]*/cnf.*.fcl
postscript_3 = [ -d 000 ] && mv [0-9]*/cnf.*.fcl* .
postscript_4 = [ -f template.fcl ] && rm template.fcl

[sam_consumer]
limit = 1
schema = xroot
appvers = %(release)s
appfamily = art
appname = mu2e

[job_output]
addoutput = *.fcl
add_to_dataset = cnf.%(submitter)s.%(stage_name)s.%(desc)s.fcl
declare_metadata = True
metadata_extractor = json
add_location = True
filter_metadata = checksum
add_metadata = file_format=fcl
hash = 2
parallel = 5
hash_alg = sha256

[job_output_1]
addoutput = *.tbz
add_to_dataset = bck.%(submitter)s.%(stage_name)s.%(desc)s.tbz
declare_metadata = True
metadata_extractor = /cvmfs/mu2e.opensciencegrid.org/Musings/SimJob/current/link/Production/MDC2020/POMS/printJsonSave.sh
add_location = True
add_metadata = file_format=tbz
filter_metadata = checksum
hash = 2
hash_alg = sha256

[job_output_2]
addoutput = *.art
dest = %(outdir_sim)s
declare_metadata = True
metadata_extractor = /cvmfs/mu2e.opensciencegrid.org/Musings/SimJob/current/link/Production/MDC2020/POMS/printJsonSave.sh
add_location = True
add_metadata = file_format=art
filter_metadata = checksum
hash = 2
hash_alg = sha256

[stage_generation_fcl]
global.stage_name = CosmicDSStopsCORSIKA

job_output.filter_metadata = parents,checksum
job_output.dest = %(outdir_fcl)s/%(stage_name)s/%(desc)s/fcl/

job_setup.prescript = /cvmfs/mu2e.opensciencegrid.org/Musings/SimJob/current/link/Production/MDC2020/POMS/fileNamesGenerator.sh 0 50 %(submitter)s > filenames.txt
executable.name = generate_fcl
executable.arg_1 = --description=CosmicDSStopsCORSIKA
executable.arg_2 = --dsconf=%(desc)s
executable.arg_3 = --dsowner=%(submitter)s
executable.arg_4 = --inputs=filenames.txt
executable.arg_5 = --merge-factor=1
executable.arg_6 = --embed
executable.arg_7 = JobConfig/cosmic/S1DSStopsCORSIKA.fcl
job_setup.ifdh_art = False


[stage_generation]
global.stage_name = CosmicDSStopsCORSIKA
job_output_2.add_to_dataset = sim.%(submitter)s.CosmicDSStopsCORSIKA.%(desc)s.art
job_output_2.dest = %(outdir_sim)s/CosmicDSStopsCORSIKA/%(desc)s/art/
job_output_1.dest = %(logdir_bck)s/%(stage_name)s/%(desc)s/tbz/
submit.memory = 4000MB

global.artRoot_dataset = sim.%(submitter)s.CosmicDSStopsCORSIKA.%(desc)s.art

job_setup.getconfig = True
job_setup.setup_8 = corsika
job_setup.setup_9 = gcc v9_3_0
submit.n_files_per_job = 1
sam_consumer.limit = 1
submit.dataset = cnf.%(submitter)s.CosmicDSStopsCORSIKA.%(desc)s.fcl
executable.name = /cvmfs/mu2e.opensciencegrid.org/Musings/SimJob/current/link/Production/MDC2020/POMS/getFilename.sh
job_setup.postscript_1 = samweb file-lineage parents `basename ${fname}` > parents.txt
job_setup.postscript_2 = CORSIKA_EXE=`which corsika77400Linux_QGSJET_fluka`
job_setup.postscript_3 = DATDIR=`dirname $CORSIKA_EXE`
job_setup.postscript_4 = IFS='.' read -r -a FIELDS <<< "`cat filename.txt`"
job_setup.postscript_5 = sed -e "s:_DATDIR_:$DATDIR/:" -e "s:_DIRECT_:`pwd`/:" -e "s:_SEED1_:$RANDOM:" -e "s:_SEED2_:$RANDOM:" -e "s:_NSHOW_:3000000:" -e "s:RUNNR   1:RUNNR   ${FIELDS[4]}:" /cvmfs/mu2e.opensciencegrid.org/Musings/SimJob/current/link/Production/JobConfig/cosmic/CORSIKAInput.txt > corsika_conf.txt
job_setup.postscript_6 = cat corsika_conf.txt
job_setup.postscript_7 = corsika77400Linux_QGSJET_fluka < corsika_conf.txt > corsika_log.txt
job_setup.postscript_8 = mv DAT* `cat filename.txt`
job_setup.postscript_9 = /cvmfs/mu2e.opensciencegrid.org/Musings/SimJob/current/link/Production/MDC2020/POMS/loggedMu2e.sh --sam-data-tier=Output:sim -c `cat torun.txt`

job_setup.multifile = False
job_setup.setup_local = True

[stage_generation_cat_fcl]
global.stage_name = CosmicDSStopsCORSIKACat
job_output.dest = %(outdir_fcl)s/%(stage_name)s/%(desc)s/fcl/

job_setup.prescript = samweb list-file-locations --defname=sim.%(submitter)s.CosmicDSStopsCORSIKA.%(desc)s.art --schema=root | cut -f1 > inputs.txt
job_setup.prescript_2 = echo '#include "JobConfig/common/artcat.fcl"' >> template.fcl
job_setup.prescript_3 = echo 'outputs.out.fileName: "sim.DSOWNER.CosmicDSStopsCORSIKACat.DSCONF.SEQ.art"' >> template.fcl

executable.name = generate_fcl
executable.arg_1 = --description=%(stage_name)s
executable.arg_2 = --dsconf=%(desc)s
executable.arg_3 = --dsowner=%(submitter)s
executable.arg_4 = --merge=50
executable.arg_5 = --inputs=inputs.txt
executable.arg_6 = --embed
executable.arg_7 = template.fcl

job_setup.ifdh_art = False

[stage_generation_cat]
global.stage_name = CosmicDSStopsCORSIKACat
job_output_2.add_to_dataset = sim.%(submitter)s.CosmicDSStopsCORSIKACat.%(desc)s.art
job_output_2.dest = %(outdir_sim)s/CosmicDSStopsCORSIKACat/%(desc)s/art
job_output_1.dest = %(logdir_bck)s/%(stage_name)s/%(desc)s/tbz/

global.artRoot_dataset = sim.%(submitter)s.CosmicDSStopsCORSIKACat.%(desc)s.art

submit.dataset = cnf.%(submitter)s.CosmicDSStopsCORSIKACat.%(desc)s.fcl
submit.n_files_per_job = 1
sam_consumer.limit = 1
job_setup.postscript = samweb file-lineage parents `basename ${fname}` > parents.txt

job_setup.getconfig = True
job_setup.multifile = False
job_setup.setup_local = True

[stage_resampler_fcl]
global.stage_name = CosmicCORSIKA
job_output.dest = %(outdir_fcl)s/%(stage_name)s/%(desc)s/fcl/

job_setup.prescript = samweb list-file-locations --defname=sim.%(submitter)s.CosmicDSStopsCORSIKACat.%(desc)s.art --schema=root | cut -f1 > inputs.txt
executable.name = generate_fcl
executable.arg_1 = --description=%(stage_name)s
executable.arg_2 = --dsconf=%(desc)s
executable.arg_3 = --dsowner=%(submitter)s
executable.arg_4 = --aux=1:physics.filters.cosmicResample.fileNames:inputs.txt
executable.arg_5 = --run-number=1205
executable.arg_6 = --events-per-job=65000
executable.arg_7 = --njobs=293
executable.arg_8 = --embed
executable.arg_9 = JobConfig/cosmic/S2Resampler.fcl
job_setup.postscript_5 = sed -i "s/\.Cosmic\./\.CosmicCORSIKA\./g" cnf.*.fcl
job_setup.ifdh_art = False

[stage_resampler]
global.stage_name = CosmicCORSIKA
job_output_2.add_to_dataset = dts.%(submitter)s.CosmicCORSIKA.%(desc)s.art
job_output_2.dest = %(outdir_dts)s/CosmicCORSIKA/%(desc)s/art
job_output_1.dest = %(logdir_bck)s/%(stage_name)s/%(desc)s/tbz/

global.artRoot_dataset = dts.%(submitter)s.CosmicCORSIKA.%(desc)s.art

job_setup.postscript = samweb file-lineage parents `basename ${fname}` > parents.txt

job_setup.getconfig = True
submit.n_files_per_job = 1
submit.memory = 4000MB
sam_consumer.limit = 1
submit.dataset = cnf.%(submitter)s.CosmicCORSIKA.%(desc)s.fcl
executable.arg_1 = --sam-data-tier=Output:dts
job_setup.multifile = False
job_setup.setup_local = True

[executable]
name = /cvmfs/mu2e.opensciencegrid.org/Musings/SimJob/current/link/Production/MDC2020/POMS/loggedMu2e.sh
